/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import com.panamahitek.PanamaHitek_Arduino;
import java.awt.Color;
import notificaciones.Notificaciones;

/**
 *
 * @author xyges
 */
public class MonitorNotificacion extends javax.swing.JInternalFrame implements Runnable {

    Notificaciones notificaciones;
    Thread hilo;
    Boolean ejecucion;

    public MonitorNotificacion(Notificaciones notificaciones) {
        this.notificaciones = notificaciones;
        ejecucion = true;
        initComponents();
        hilo = new Thread(this);
        hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelNotificaciones = new javax.swing.JPanel();
        jLabelAviso = new javax.swing.JLabel();
        jLabelMensaje = new javax.swing.JLabel();
        jProgressBarSent = new javax.swing.JProgressBar();

        setClosable(true);
        setIconifiable(true);
        setTitle("Notificaciones");

        jLabelAviso.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelAviso.setText("■");

        jLabelMensaje.setText("Enviando notificación de");

        javax.swing.GroupLayout jPanelNotificacionesLayout = new javax.swing.GroupLayout(jPanelNotificaciones);
        jPanelNotificaciones.setLayout(jPanelNotificacionesLayout);
        jPanelNotificacionesLayout.setHorizontalGroup(
            jPanelNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNotificacionesLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelAviso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelMensaje)
                    .addComponent(jProgressBarSent, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelNotificacionesLayout.setVerticalGroup(
            jPanelNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNotificacionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAviso)
                    .addGroup(jPanelNotificacionesLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabelMensaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBarSent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelNotificaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelNotificaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelAviso;
    private javax.swing.JLabel jLabelMensaje;
    private javax.swing.JPanel jPanelNotificaciones;
    private javax.swing.JProgressBar jProgressBarSent;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while (ejecucion) {

            try {
                if (notificaciones.senalFuego) {
                    jLabelMensaje.setText("Enviando notificación de fuego");
                    jLabelAviso.setForeground(Color.PINK);
                    for (double i = 1; i <= 100; i += 0.0000007) {
                        jProgressBarSent.setValue((int) i);
                    }
                } else if (notificaciones.senalHumo) {
                    jLabelMensaje.setText("Enviando notificación de Humo/Gas");
                    jLabelAviso.setForeground(Color.PINK);
                    for (double i = 1; i <= 100; i += 0.0000007) {
                        jProgressBarSent.setValue((int) i);
                    }
                } else if (notificaciones.senalIntruso) {
                    jLabelMensaje.setText("Enviando notificación de Intruso");
                    jLabelAviso.setForeground(Color.PINK);
                    for (double i = 1; i <= 100; i += 0.0000007) {
                        jProgressBarSent.setValue((int) i);
                    }
                } else {
                    jLabelMensaje.setText("No hay notificaciones");
                    jProgressBarSent.setValue(0);
                    jLabelAviso.setForeground(Color.BLACK);
                }
                Thread.sleep(1000);
            } catch (Exception e) {

            }

        }
    }
}
